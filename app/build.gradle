/* CONCETTI
 - Android ufficiale:  Opzioni di test avanzate!!! https://developer.android.com/studio/test/advanced-test-setup
 - Si puo' cambiare anche la directory dove vengono salvati i risultati dei tests: (vedi sopra)
 - Opzioni di textInstrumentalRunner: https://medium.com/stepstone-tech/exploring-androidjunitrunner-filtering-options-df26d30b4f60
 - Annotazioni: https://pspdfkit.com/blog/2020/filtering-tests-in-android/
 - 6 MIGLIORI TUTORIALS PER GRADLE!!!! https://tomgregory.com/best-gradle-tutorials-for-beginners/
 - se dentro ad unitTests.all di mette filter {includeTestsMatching "ExampleUnitTest.primo_test"}   esegue solo il primo test (esempio)  !!!!!! e si possono cercare i test che si vuole!!!!
 - esempio filter: https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/TestFilter.html
 - Si puo' generare un file xml per i test CI
 - Documentazione TestLogging: https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/logging/TestLoggingContainer.html
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.tests_vari"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //qui che vanno messi i cambi di configurazione di test!!!!
    testOptions {
        /*filter {
            includeTestsMatching "ExampleUnitTest"
        }*/
        unitTests.all {
            filter {
                //se si mette il seguente esegue solo il primo test (da linea di comando e build!!!)
                includeTestsMatching "ExampleUnitTest.primo_test"
                //fa' tutti i primi test delle due classi (oppure con Regex!!!)
                //includeTestsMatching "*.primo_test"
            }
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
